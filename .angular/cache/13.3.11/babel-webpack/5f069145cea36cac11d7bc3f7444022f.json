{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TodoService = /*#__PURE__*/(() => {\n  class TodoService {\n    constructor(http) {\n      this.http = http;\n      // Configuration parameter for http.get,post,put etc\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n    //CRUD METHODS\n    //We call toPromise() so that all methods return a promise\n    createTodo({\n      text\n    }) {\n      return this.http.post(`${environment.server}/todos.json`, {\n        text,\n        done: false\n      }, this.httpOptions).toPromise();\n    }\n    getTodos() {\n      return __awaiter(this, void 0, void 0, function* () {\n        let todos = [];\n        let observable = this.http.get(`${environment.server}/todos.json`, this.httpOptions);\n        let data = yield observable.toPromise(); //convert observable returned by get() into a promise so we can await the value\n        //just some transformation of the data\n        //because of how firebase stores a collection in a object\n        for (let [key, value] of Object.entries(data)) {\n          value.id = key;\n          todos.push(value);\n        }\n        return todos;\n      });\n    }\n    deleteTodo(id) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const observable = this.http.delete(`${environment.server}/todos/${id}.json`, this.httpOptions);\n        let result = yield observable.toPromise();\n        return result;\n      });\n    }\n    toggleStatus(id, done) {\n      return this.http.put(`${environment.server}/todos/${id}/done.json`, done, this.httpOptions).toPromise();\n    }\n  }\n  TodoService.ɵfac = function TodoService_Factory(t) {\n    return new (t || TodoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  TodoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TodoService,\n    factory: TodoService.ɵfac,\n    providedIn: 'root'\n  });\n  return TodoService;\n})();","map":null,"metadata":{},"sourceType":"module"}